version: "3.7"

services:
  db:
    image: mysql
    platform: linux/amd64
    container_name: mysql-con
    env_file:
      - ./.env
    ports:
      - 3307:3306
    expose:
      - 3306
    volumes:
      - data_mysql:/mysql
    networks:
      - app-tier
    # 명령어 실행 끝나도 안꺼짐
    tty: true

  backend:
    links:
      - db
    container_name: backend-con
    build:
      context: ./backend
    ports:
      - 8000:8000
    expose:
      - 8000
    volumes:
      - ./backend:/backend/
    # restart: always 배포때만
    env_file:
      - ./.env
    depends_on:
      - db
    # command: 
    networks:
      - app-tier
    # 명령어 실행 끝나도 안꺼짐
    tty: true
  
  frontend-web:
    container_name: frontend-web-con
    build: ./frontend-web
    command: ["yarn", "start"]

    networks:
      - app-tier
    volumes:
      - ./frontend-web/:/frontend-web
      - build_folder:/frontend-web/build
      - ./frontend-web/node_modules/:/frontend-web/node_modules
    ports:
      - 3000:3000
    # 명령어 실행 끝나도 안꺼짐
    tty: true

  nginx:
    container_name: nginx-con
    build: ./nginx
    ports:
    - 8080:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-tier
    # 명령어 실행 끝나도 안꺼짐
    tty: true
#    links:
#      - prometheus_nginx
    depends_on:
      - backend

  prometheus:
    image: prom/prometheus #docker Hub에서 가져와서 사용
    container_name: prometheus #컨테이너 이름 설정
    volumes:
      - ./prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
      # - ./prometheus/volume:/prometheus
    ports:
      - 9090:9090 #외부:내부포트
    command: # 컨테이너 실행 완료 후 컨테이너의 쉘에서 실행시킬 쉘명령어를 지정할 수 있다.
      - '--web.enable-lifecycle' #구성된 규칙 파일 다시 로드
      - '--config.file=/etc/prometheus/prometheus.yml' #로드할 구성 파일 지정
    # restart: always #컨테이너가 다운될 경우 항상 재실행
    networks:
      - promnet #컨테이너간의 네트워크 분리를 위해 설정
    depends_on:
      - node-exporter

  node-exporter:
    image: nginx/nginx-prometheus-exporter
    container_name: node-exporter
    ports:                                                                                                            
    - "9113:9113"                                                                                                     
    command:                                                                                                          
    - -nginx.scrape-uri=http://nginx:80/metrics
    - -web.telemetry-path=/prometheus
    networks:
      - app-tier
    depends_on:
      - nginx


networks:
  app-tier:
    external: true

  promnet:
    driver: bridge
  
volumes:
  data_mysql:
  build_folder: